/// Project Structure: Next.js + Supabase OAuth + Vercel Ready

// --- pages/_app.tsx ---
import { SessionContextProvider, createBrowserSupabaseClient } from '@supabase/auth-helpers-react';
import { useState } from 'react';
import '../styles/globals.css';

export default function App({ Component, pageProps }) {
  const [supabaseClient] = useState(() => createBrowserSupabaseClient());
  return (
    <SessionContextProvider supabaseClient={supabaseClient} initialSession={pageProps.initialSession}>
      <Component {...pageProps} />
    </SessionContextProvider>
  );
}

// --- pages/index.tsx ---
import { useSession, useSupabaseClient } from '@supabase/auth-helpers-react';
import { useRouter } from 'next/router';
import { useEffect } from 'react';

export default function Home() {
  const session = useSession();
  const supabase = useSupabaseClient();
  const router = useRouter();

  useEffect(() => {
    if (session) {
      router.push('/dashboard');
    }
  }, [session]);

  return (
    <div style={{ textAlign: 'center', marginTop: '100px' }}>
      <h1>Welcome to Briefly</h1>
      <button
        onClick={() => {
          supabase.auth.signInWithOAuth({
            provider: 'google',
            options: {
              redirectTo: typeof window !== 'undefined' ? window.location.origin : '',
            },
          });
        }}
      >
        Sign in with Google
      </button>
    </div>
  );
}

// --- pages/dashboard.tsx ---
import { useSession } from '@supabase/auth-helpers-react';
import { useRouter } from 'next/router';
import { useEffect } from 'react';

export default function Dashboard() {
  const session = useSession();
  const router = useRouter();

  useEffect(() => {
    if (!session) {
      router.push('/');
    }
  }, [session]);

  if (!session) return <p>Loading...</p>;

  return (
    <div>
      <h1>Welcome, {session.user.email}</h1>
      <p>This is your dashboard</p>
    </div>
  );
}

// --- utils/supabaseClient.ts ---
import { createClientComponentClient } from '@supabase/auth-helpers-nextjs';
export const supabase = createClientComponentClient();

// --- next.config.js ---
/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
};
module.exports = nextConfig;

// --- package.json ---
{
  "name": "briefly-app",
  "version": "1.0.0",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start"
  },
  "dependencies": {
    "@supabase/auth-helpers-nextjs": "^0.8.0",
    "@supabase/auth-helpers-react": "^0.8.0",
    "@supabase/supabase-js": "^2.39.0",
    "next": "^13.4.10",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  }
}

// --- README.md ---
# Briefly App (Next.js + Supabase)

> Auth-ready starter template for sales engineer projects.

### Features
- Google Sign-in with Supabase
- Protected Dashboard
- Vercel deployment-ready

### Setup
1. Clone the repo
2. Create a project on [Supabase.io](https://supabase.io)
3. Add your environment variables in Vercel:
   - `SUPABASE_URL`
   - `SUPABASE_ANON_KEY`
4. Deploy to Vercel ðŸš€

### Dev
```bash
npm install
npm run dev
```

---

Add `styles/globals.css` as needed or keep it empty.
